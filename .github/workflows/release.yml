name: create-release
on: 
  push:
    branches:
      - main
    paths:
      - 'mod-assets/**'
jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
        - name: Cache tools
          id: cache-tools
          uses: actions/cache@v4
          with:
            key: ${{ secrets.CACHE }}
            path: |
              ${{ github.workspace }}/frc.exe
            restore-keys: |
              ${{ secrets.CACHE }}

        - if: ${{ steps.cache-tools.outputs.cache-hit != 'true' }}
          name: Download tools
          id: download-tools
          run: | 
            cd ${{ github.workspace }}
            curl -O http://adoxa.altervista.org/freelancer/frc.zip
            unzip frc.zip
        
        - name: Upload Freelancer Resource Compiler artefact
          uses: actions/upload-artifact@v4
          with:
            name: frc
            path: ${{ github.workspace }}/frc.exe

  compile-release:
    needs: setup-environment
    runs-on: windows-latest
    steps:

    - name: Download tooling artefacts
      uses: actions/download-artifact@v4
      with:
        path: ${{ github.workspace }}

    - name: Check out repository code
      id: checkout-repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: staging
  
    - name: Compile infocards
      id: compile-infocards
      run: |
        Start-Process -Wait ${{ github.workspace }}\frc\frc.exe -ArgumentList "staging\mod-assets\infocard_imports.frc", "staging\mod-assets\EXE\BmodInfocards.dll"
        Start-Process -Wait ${{ github.workspace }}\frc\frc.exe -ArgumentList "staging\mod-assets\weapon_infocard_imports.frc", "staging\mod-assets\EXE\BmodWeaponInfocards.dll"

    - name: Create the Release.7z file
      id: create-release-archive
      run: |
        7z a -t7z -mx=9 -mtm- ${{ github.workspace }}/staging/Release.7z ${{ github.workspace }}/staging/mod-assets/DATA/ ${{ github.workspace }}/staging/mod-assets/DLLS/ ${{ github.workspace }}/staging/mod-assets/EXE/
        
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M')"

    - name: Extract information from CHANGELOG.md
      id: extract_changelog
      shell: bash
      run: |
        cd '${{ github.workspace }}/staging'
        res=$''
        changelog="$(cat CHANGELOG.md)"
        while read -r line; do    
          if [[ "$line" =~ ^##[[:space:]][[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+ ]]; then
            if [ -z "$version" ]; then
              version=${line:2}
            else
              break
            fi
          else
            if [ ! -z "$version" ]; then
              res+="${line//\r@Q}\n"
            fi
          fi
        done < CHANGELOG.md
        echo -e "version<<EOF"$'\n'"$version"$'\n'EOF >> $GITHUB_OUTPUT
        echo -e "body<<EOF"$'\n'$res$'\n'EOF >> $GITHUB_OUTPUT
        echo 

    - name: Create release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.date.outputs.date }}
        release_name: "${{ steps.extract_changelog.outputs.version }} | ${{ steps.date.outputs.date }}"
        body: |
          ${{ steps.extract_changelog.outputs.body }}
          This is not an installer for the mod, and only contains the client files. If you want an all-in-one installer, please check out the latest releases for [BMOD Installer](https://github.com/better-modernized-combat/bmod-installer).
        draft: false
        prerelease: false

    - name: Upload release asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }} 
        asset_path: ${{ github.workspace }}/staging/Release.7z
        asset_name: Release.7z
        asset_content_type: application/zip

  installer:
      needs: compile-release
      runs-on: ubuntu-latest
      name: Trigger installer build workflow 
      steps:
      - uses: passeidireto/trigger-external-workflow-action@main
        env: 
          PAYLOAD_AUTHOR: ${{ github.author }}
        with:
            repository: better-modernized-combat/bmod-installer
            event: trigger-workflow
            github_pat: ${{ secrets.PAT }}
    