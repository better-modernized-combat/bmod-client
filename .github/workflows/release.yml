name: Release
on: push
jobs:
  build:
    runs-on: windows-latest
    steps:
        - name: Check out repository code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
            path: staging
        
        - name: Get current date
          id: date
          run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M')"

        - name: Extract information from CHANGELOG.md
          id: extract_changelog
          shell: bash
          run: |
            cd "${{ github.workspace }}\staging\"
            res=$''
            changelog="$(cat CHANGELOG.md)"
            while read -r line; do    
              if [[ "$line" =~ ^##[[:space:]][[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+ ]]; then
                if [ -z "$version" ]; then
                  version=${line:2}
                else
                  break
                fi
              else
                if [ ! -z "$version" ]; then
                  res+="${line//\r@Q}\n"
                fi
              fi
            done < CHANGELOG.md
            echo -e "version<<EOF"$'\n'"$version"$'\n'EOF >> $GITHUB_OUTPUT
            echo -e "body<<EOF"$'\n'$res$'\n'EOF >> $GITHUB_OUTPUT
    
        - name: Download frc and build infocards
          run: |
            Invoke-WebRequest "http://adoxa.altervista.org/freelancer/dlt.php?f=frc" -OutFile ${{ github.workspace }}\frc.zip
            Expand-Archive ${{ github.workspace }}\frc.zip
            Start-Process -Wait ${{ github.workspace }}\frc\frc.exe -ArgumentList "staging\mod-assets\infocard_imports.frc", "staging\mod-assets\EXE\BmodInfocards.dll"

        - name: Download the Freelancer XML Project and Compile XML files to UTF
          run: ${{ github.workspace }}\staging\build-tools\workflow-build.ps1
   
        - name: Create the mod zip
          run: |
            7z a -t7z -mx=9 ${{ github.workspace }}/staging/Release.7z ${{ github.workspace }}/staging/mod-assets/DATA/ ${{ github.workspace }}/staging/mod-assets/DLLS/ ${{ github.workspace }}/staging/mod-assets/EXE/

        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ steps.date.outputs.date }}
            release_name: "${{ steps.extract_changelog.outputs.version }} | ${{ steps.date.outputs.date }}"
            body: |
              ${{ steps.extract_changelog.outputs.body }}
            draft: false
            prerelease: false

        - name: Upload Release Asset
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} 
            asset_path: ${{ github.workspace }}/staging/Release.7z
            asset_name: Release.7z
            asset_content_type: application/zip
    